import React from 'react';
import { Star, Users, RefreshCw, MapPin, TrendingUp, Target, Search, Award, Clock, ShoppingBag } from 'lucide-react';
import { BusinessData, BusinessFormData } from '../types';

interface BusinessCardProps {
  data: BusinessData;
  businessInfo: BusinessFormData;
  onRegenerateHeadline: () => void;
  isRegenerating: boolean;
}

const BusinessCard: React.FC<BusinessCardProps> = ({
  data,
  businessInfo,
  onRegenerateHeadline,
  isRegenerating
}) => {
  const renderStars = (rating: number) => {
    const stars = [];
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 !== 0;

    for (let i = 0; i < fullStars; i++) {
      stars.push(<Star key={i} className="w-5 h-5 text-amber-400 fill-current" />);
    }

    if (hasHalfStar) {
      stars.push(<Star key="half" className="w-5 h-5 text-amber-400 fill-current opacity-50" />);
    }

    const remainingStars = 5 - Math.ceil(rating);
    for (let i = 0; i < remainingStars; i++) {
      stars.push(<Star key={`empty-${i}`} className="w-5 h-5 text-slate-300" />);
    }

    return stars;
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return 'bg-rose-50 border-rose-200 text-rose-800';
      case 'medium': return 'bg-amber-50 border-amber-200 text-amber-800';
      case 'low': return 'bg-emerald-50 border-emerald-200 text-emerald-800';
      default: return 'bg-slate-50 border-slate-200 text-slate-800';
    }
  };

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'coffee': return '☕';
      case 'restaurant': return '🍽️';
      case 'pizza': return '🍕';
      case 'bakery': return '🥖';
      case 'fastfood': return '🍔';
      case 'indian': return '🍛';
      case 'chinese': return '🥢';
      case 'bar': return '🍺';
      case 'gym': return '💪';
      case 'salon': return '💇';
      case 'retail': return '🛍️';
      case 'medical': return '🏥';
      case 'automotive': return '🚗';
      case 'hotel': return '🏨';
      case 'education': return '📚';
      default: return '🏢';
    }
  };

  return (
    <div className="space-y-6">
      {/* Main Business Card */}
      <div className="bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-8 border border-purple-200/50">
        <div className="mb-6">
          <div className="flex items-center space-x-3 mb-2">
            <span className="text-3xl">{getCategoryIcon(data.category)}</span>
            <div>
              <h3 className="text-2xl font-bold text-slate-800">{businessInfo.name}</h3>
              <div className="flex items-center space-x-2 text-slate-600">
                <MapPin className="w-4 h-4" />
                <span>{businessInfo.location}</span>
                <span className="px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full font-medium">
                  {data.category.charAt(0).toUpperCase() + data.category.slice(1)}
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* Rating Section */}
        <div className="mb-8">
          <div className="flex items-center space-x-3 mb-3">
            <span className="text-3xl font-bold text-slate-800">{data.rating}</span>
            <div className="flex space-x-1">
              {renderStars(data.rating)}
            </div>
            <div className="flex items-center space-x-2 text-slate-600">
              <Users className="w-4 h-4" />
              <span className="font-medium">{data.reviews.toLocaleString()} reviews</span>
            </div>
          </div>
          
          <div className="grid grid-cols-3 gap-4">
            <div className="text-center p-4 bg-gradient-to-br from-sky-50 to-cyan-100 rounded-lg border border-sky-200/50">
              <div className="text-2xl font-bold text-sky-600">
                {data.rating >= 4.5 ? 'A+' : data.rating >= 4.0 ? 'A' : data.rating >= 3.5 ? 'B+' : 'B'}
              </div>
              <div className="text-sm text-sky-700 font-medium">Overall Grade</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-emerald-50 to-teal-100 rounded-lg border border-emerald-200/50">
              <div className="text-2xl font-bold text-emerald-600">
                {data.reviews > 200 ? 'High' : data.reviews > 100 ? 'Good' : 'Growing'}
              </div>
              <div className="text-sm text-emerald-700 font-medium">Review Volume</div>
            </div>
            <div className="text-center p-4 bg-gradient-to-br from-violet-50 to-purple-100 rounded-lg border border-violet-200/50">
              <div className="text-2xl font-bold text-violet-600">{data.competition.competitionLevel}</div>
              <div className="text-sm text-violet-700 font-medium">Competition</div>
            </div>
          </div>
        </div>

        {/* SEO Headline Section */}
        <div className="mb-8">
          <h4 className="text-xl font-semibold text-slate-800 mb-4 flex items-center space-x-2">
            <Search className="w-5 h-5 text-purple-500" />
            <span>AI-Generated SEO Headline</span>
          </h4>
          <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-6 mb-4 border border-purple-200">
            <p className="text-slate-800 font-medium leading-relaxed text-lg">{data.headline}</p>
          </div>
          <button
            onClick={onRegenerateHeadline}
            disabled={isRegenerating}
            className="flex items-center space-x-2 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600 disabled:opacity-50 disabled:cursor-not-allowed text-white rounded-lg transition-all duration-200 shadow-md hover:shadow-lg"
          >
            <RefreshCw className={`w-4 h-4 ${isRegenerating ? 'animate-spin' : ''}`} />
            <span>{isRegenerating ? 'Regenerating...' : 'Generate New Headline'}</span>
          </button>
        </div>
      </div>

      {/* Business Insights Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Business Intelligence */}
        <div className="bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-purple-200/50">
          <h4 className="text-lg font-semibold text-slate-800 mb-4 flex items-center space-x-2">
            <TrendingUp className="w-5 h-5 text-emerald-500" />
            <span>Business Intelligence</span>
          </h4>
          <div className="space-y-4">
            <div className="flex items-center justify-between p-3 bg-slate-50/80 rounded-lg border border-slate-200/50">
              <div className="flex items-center space-x-2">
                <Clock className="w-4 h-4 text-sky-500" />
                <span className="font-medium text-slate-700">Peak Hours</span>
              </div>
              <span className="text-slate-600">{data.insights.peakHours}</span>
            </div>
            <div className="flex items-center justify-between p-3 bg-slate-50/80 rounded-lg border border-slate-200/50">
              <div className="flex items-center space-x-2">
                <ShoppingBag className="w-4 h-4 text-emerald-500" />
                <span className="font-medium text-slate-700">Customer Type</span>
              </div>
              <span className="text-slate-600 text-sm">{data.insights.customerType}</span>
            </div>
            <div className="p-3 bg-slate-50/80 rounded-lg border border-slate-200/50">
              <div className="flex items-center space-x-2 mb-2">
                <Award className="w-4 h-4 text-amber-500" />
                <span className="font-medium text-slate-700">Popular Items</span>
              </div>
              <div className="flex flex-wrap gap-2">
                {data.insights.popularItems.map((item, index) => (
                  <span key={index} className="px-2 py-1 bg-amber-100 text-amber-800 text-xs rounded-full border border-amber-200">
                    {item}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Location & Competition */}
        <div className="bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-purple-200/50">
          <h4 className="text-lg font-semibold text-slate-800 mb-4 flex items-center space-x-2">
            <Target className="w-5 h-5 text-rose-500" />
            <span>Market Analysis</span>
          </h4>
          <div className="space-y-4">
            <div className="p-3 bg-slate-50/80 rounded-lg border border-slate-200/50">
              <div className="flex items-center space-x-2 mb-2">
                <MapPin className="w-4 h-4 text-sky-500" />
                <span className="font-medium text-slate-700">Popular Areas</span>
              </div>
              <div className="flex flex-wrap gap-2">
                {data.locationInfo.popularAreas.map((area, index) => (
                  <span key={index} className="px-2 py-1 bg-sky-100 text-sky-800 text-xs rounded-full border border-sky-200">
                    {area}
                  </span>
                ))}
              </div>
            </div>
            <div className="grid grid-cols-2 gap-3">
              <div className="text-center p-3 bg-orange-50 rounded-lg border border-orange-200/50">
                <div className="text-xl font-bold text-orange-600">{data.competition.totalCompetitors}</div>
                <div className="text-xs text-orange-700">Competitors</div>
              </div>
              <div className="text-center p-3 bg-indigo-50 rounded-lg border border-indigo-200/50">
                <div className="text-xl font-bold text-indigo-600">{data.competition.estimatedMarketShare}</div>
                <div className="text-xs text-indigo-700">Market Share</div>
              </div>
            </div>
            <div className="p-3 bg-slate-50/80 rounded-lg border border-slate-200/50">
              <span className="font-medium text-slate-700">Demographics: </span>
              <span className="text-slate-600 text-sm">{data.locationInfo.demographics}</span>
            </div>
          </div>
        </div>
      </div>

      {/* SEO Performance */}
      <div className="bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-purple-200/50">
        <h4 className="text-lg font-semibold text-slate-800 mb-4 flex items-center space-x-2">
          <Search className="w-5 h-5 text-violet-500" />
          <span>SEO Performance</span>
        </h4>
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
          <div className="text-center p-4 bg-gradient-to-br from-violet-50 to-purple-100 rounded-lg border border-violet-200/50">
            <div className="text-2xl font-bold text-violet-600">{data.seo.monthlySearchVolume.toLocaleString()}</div>
            <div className="text-sm text-violet-700 font-medium">Monthly Searches</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-emerald-50 to-teal-100 rounded-lg border border-emerald-200/50">
            <div className="text-2xl font-bold text-emerald-600">{data.seo.seoScore}</div>
            <div className="text-sm text-emerald-700 font-medium">SEO Score</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-sky-50 to-cyan-100 rounded-lg border border-sky-200/50">
            <div className="text-2xl font-bold text-sky-600">#{data.seo.localRanking}</div>
            <div className="text-sm text-sky-700 font-medium">Local Ranking</div>
          </div>
          <div className="text-center p-4 bg-gradient-to-br from-amber-50 to-orange-100 rounded-lg border border-amber-200/50">
            <div className="text-2xl font-bold text-amber-600">{data.seo.topKeywords.length}</div>
            <div className="text-sm text-amber-700 font-medium">Top Keywords</div>
          </div>
        </div>
        <div className="p-4 bg-slate-50/80 rounded-lg border border-slate-200/50">
          <div className="flex items-center space-x-2 mb-2">
            <span className="font-medium text-slate-700">Top Keywords:</span>
          </div>
          <div className="flex flex-wrap gap-2">
            {data.seo.topKeywords.map((keyword, index) => (
              <span key={index} className="px-3 py-1 bg-violet-100 text-violet-800 text-sm rounded-full font-medium border border-violet-200">
                {keyword}
              </span>
            ))}
          </div>
        </div>
      </div>

      {/* Recommendations */}
      <div className="bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-purple-200/50">
        <h4 className="text-lg font-semibold text-slate-800 mb-4 flex items-center space-x-2">
          <Award className="w-5 h-5 text-emerald-500" />
          <span>Growth Recommendations</span>
        </h4>
        <div className="space-y-4">
          {data.recommendations.map((rec, index) => (
            <div key={index} className={`p-4 rounded-lg border ${getPriorityColor(rec.priority)}`}>
              <div className="flex items-start justify-between mb-2">
                <h5 className="font-semibold">{rec.title}</h5>
                <span className="px-2 py-1 text-xs rounded-full bg-white bg-opacity-50 font-medium">
                  {rec.priority.toUpperCase()}
                </span>
              </div>
              <p className="text-sm opacity-90">{rec.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default BusinessCard;
